version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: medical-ai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: medical_admin
      POSTGRES_PASSWORD: medical_dev_2024
      POSTGRES_DB: medical_ai_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - medical-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medical_admin -d medical_ai_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: medical-ai-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://medical_admin:medical_dev_2024@postgres:5432/medical_ai_db?schema=public
      JWT_SECRET: seu_secret_super_secreto_aqui_mude_em_producao
      JWT_EXPIRES_IN: 7d
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME:-medical-ai-audio}
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      # Bind mount para hot-reload
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
      - ./backend/.env:/app/.env
      # Usar volumes nomeados para node_modules (evita conflitos)
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - medical-network
    command: npm run dev

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: medical-ai-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      # Bind mount para hot-reload
      - ./frontend/app:/app/app
      - ./frontend/components:/app/components
      - ./frontend/lib:/app/lib
      - ./frontend/hooks:/app/hooks
      - ./frontend/types:/app/types
      - ./frontend/store:/app/store
      - ./frontend/public:/app/public
      - ./frontend/.env.local:/app/.env.local
      # Usar volumes nomeados para node_modules e .next
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    depends_on:
      - backend
    networks:
      - medical-network
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local
  frontend_next:
    driver: local

networks:
  medical-network:
    driver: bridge
