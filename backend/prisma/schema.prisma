generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  DOCTOR
  ADMIN
}

enum ConsultationStatus {
  RECORDING
  UPLOADED
  TRANSCRIBING
  TRANSCRIBED
  DIAGNOSING
  COMPLETED
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  password      String
  name          String
  crm           String          @unique
  role          Role            @default(DOCTOR)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  consultations Consultation[]
}

model Consultation {
  id              String              @id @default(uuid())
  doctorId        String
  patientName     String
  patientAge      Int?
  patientGender   String?
  chiefComplaint  String?
  audioUrl        String?
  audioKey        String?
  audioSize       Int?
  audioDuration   Int?
  transcription   String?             @db.Text
  status          ConsultationStatus  @default(RECORDING)
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  doctor          User                @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  diagnosis       Diagnosis?

  @@index([doctorId])
  @@index([status])
  @@index([createdAt])
}

model Diagnosis {
  id                  String       @id @default(uuid())
  consultationId      String       @unique
  symptoms            String[]
  preliminaryDiagnosis String      @db.Text
  recommendations     String       @db.Text
  suggestedExams      String[]
  observations        String?      @db.Text
  confirmed           Boolean      @default(false)
  confirmedAt         DateTime?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  consultation        Consultation @relation(fields: [consultationId], references: [id], onDelete: Cascade)

  @@index([consultationId])
}
